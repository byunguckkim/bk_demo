// Copyright (C) 2019 Applied Intuition, Inc. All rights reserved.
// This source code file is distributed under and subject to the LICENSE in license.txt

syntax = "proto3";

package simian_public.motion_state_modifier;

import "applied/simian/public/proto/scenario/common.proto";
import "applied/simian/public/proto/spatial.proto";

message MotionStateModifierSpec {
  oneof modifier_type {
    // PassThrough state modifier returns the state that you give it
    PassThroughSpec passthrough = 1;

    // MultiModifier modifies the input state multiple times in the order of the modifiers that you
    // specify
    MultiModifierSpec multi_modifier = 2;

    // SuspensionModifier modifies the roll and pitch states of the input like a real world
    // suspension
    SuspensionModifierSpec suspension_modifier = 3;

    // FirstOrderBackwardDifferenceModifier fills in motion state velocity and acceleration based on
    // input pose
    FirstOrderBackwardDifferenceModifierSpec first_order_backward_difference = 4;
  }

  message PassThroughSpec {}

  message MultiModifierSpec {
    repeated MotionStateModifierSpec modifier_list = 1;
  }

  message FirstOrderBackwardDifferenceModifierSpec {}
}

message SuspensionModifierSpec {
  oneof suspension_type {
    // RollPitchSpec houses all parameters required by a rigid tire roll-pitch suspension model.
    RollPitchSpec roll_pitch = 1;
  }
}

// <!-- Next ID: 14 -->
message RollPitchSpec {
  double spring_stiffness_front = 1;            // [N/m]
  double spring_stiffness_rear = 2;             // [N/m]
  double damping_coefficient_front = 3;         // [N*s/m]
  double damping_coefficient_rear = 4;          // [N*s/m]
  double sprung_mass = 5;                       // [kg]
  double spring_free_length = 6;                // [m]
  double static_roll_center_height = 7;         // [m]
  double static_pitch_center_height = 8;        // [m]
  spatial.InertiaSpec sprung_mass_inertia = 9;  // [-]
  double max_roll = 11;                         // [rad]
  double max_pitch = 12;                        // [rad]
  // Required to estimate wheel base and track width. Copied from simian.scenarios.Ego to avoid
  // redundant fields.
  repeated simian_public.scenario.WheelConfig wheel_config = 10;
  uint32 num_integration_steps = 13;  // [-], defaults to 1
}
